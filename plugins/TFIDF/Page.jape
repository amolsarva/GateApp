Phase: Page  
Input: Token SpaceToken Date Break NamedEmail
Options: control = appelt


Rule: thread_header
(
	{Token.string == "Print"}
	{Break}
	{NamedEmail}
	{SpaceToken.kind==control}
	({SpaceToken.kind!=control}|{Token})+
	{SpaceToken.kind==control}
	{Token.kind == number}({SpaceToken.kind!=control})+{Token.string == "messages"}
):header
-->
:header.ThreadHeader = {rule = "thread_header"}


Rule: message_header
{SpaceToken.kind==control}
(
	({NamedEmail}):from
	({Token}|{SpaceToken.kind!=control})*
	
	(
		({SpaceToken.kind==control}|{Break})
		{Token.string =~ "Reply"}{Token}{Token.string == ":"}({SpaceToken.kind!=control})*
		{NamedEmail} ({Token.string == ","}({SpaceToken})* {NamedEmail})*
	)?
	
	({SpaceToken.kind==control}|{Break})
	{Token.string == "To"}{Token.string == ":"}({SpaceToken.kind!=control})*
	{NamedEmail} ({Token.string == ","}({SpaceToken})* {NamedEmail})*

	(
		({SpaceToken.kind==control}|{Break})
		{Token.string == "Cc"}{Token.string == ":"}({SpaceToken.kind!=control})*
		{NamedEmail} ({Token.string == ","}({SpaceToken})* {NamedEmail})*
	)?

	
	(
		({SpaceToken.kind==control}|{Break})
		{Token.string == "Bcc"}{Token.string == ":"}({SpaceToken.kind!=control})*
		{NamedEmail} ({Token.string == ","}({SpaceToken})* {NamedEmail})*
	)?
):header
-->
:header.MessageHeader = {rule = "message_header", sender_name=:from.NamedEmail.name, sender_email=:from.NamedEmail.email}
